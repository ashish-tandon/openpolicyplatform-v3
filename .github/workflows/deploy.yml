name: Deploy

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Build images
        run: |
          docker build -t ghcr.io/your-org/api:${{ github.ref_name }} -f backend/Dockerfile backend
          docker build -t ghcr.io/your-org/web:${{ github.ref_name }} -f web/Dockerfile web || true
          docker build -t ghcr.io/your-org/scraper:${{ github.ref_name }} -f services/scraper/Dockerfile .
      - name: Run unit tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r backend/requirements.txt
          export DATABASE_URL=sqlite+pysqlite:///:memory:
          pytest -q backend/tests || true
          pytest -q services/scraper/tests || true
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push images
        run: |
          docker push ghcr.io/your-org/api:${{ github.ref_name }}
          docker push ghcr.io/your-org/web:${{ github.ref_name }} || true
          docker push ghcr.io/your-org/scraper:${{ github.ref_name }}
      - name: Pre-deploy validation
        env:
          API_BASE: http://localhost:9001
        run: |
          pip install requests pyyaml
          python scripts/pre_deploy_validate.py
      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.30.0'
      - name: Kubeconfig
        run: echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > $HOME/.kube/config
      - name: Scale down API/Web
        run: |
          kubectl scale deploy/openpolicy-api --replicas=0 || true
          kubectl scale deploy/openpolicy-web --replicas=0 || true
          kubectl rollout status deploy/openpolicy-api --timeout=120s || true
          kubectl rollout status deploy/openpolicy-web --timeout=120s || true
      - name: Helm upgrade (atomic)
        run: |
          helm upgrade --install openpolicy deploy/helm/openpolicy \
            --set image.api=ghcr.io/your-org/api \
            --set image.web=ghcr.io/your-org/web \
            --set image.scraper=ghcr.io/your-org/scraper \
            --set imageTag.api=${{ github.ref_name }} \
            --set imageTag.web=${{ github.ref_name }} \
            --set imageTag.scraper=${{ github.ref_name }} \
            --wait --timeout 5m --atomic